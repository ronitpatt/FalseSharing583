main
  %1 = alloca i32, align 4
  %2 = alloca %struct.s, align 1
  %3 = alloca %class.c, align 4
  %4 = alloca [4 x %class.c], align 16
  store i32 0, ptr %1, align 4
  call void @_ZN1cC2Ev(ptr noundef nonnull align 4 dereferenceable(12) %3)
  %5 = getelementptr inbounds [4 x %class.c], ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %class.c, ptr %5, i64 4
  br label %7
  %8 = phi ptr [ %5, %0 ], [ %9, %7 ]
  call void @_ZN1cC2Ev(ptr noundef nonnull align 4 dereferenceable(12) %8)
  %9 = getelementptr inbounds %class.c, ptr %8, i64 1
  %10 = icmp eq ptr %9, %6
  br i1 %10, label %11, label %7
  ret i32 1
_ZN1cC2Ev
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %class.c, ptr %3, i32 0, i32 0
  store i32 1, ptr %4, align 4
  %5 = getelementptr inbounds %class.c, ptr %3, i32 0, i32 1
  store i8 1, ptr %5, align 4
  %6 = getelementptr inbounds %class.c, ptr %3, i32 0, i32 2
  store i32 3, ptr %6, align 4
  ret void
main
  %1 = alloca i32, align 4
  %2 = alloca %struct.spadded, align 1
  %3 = alloca %class.c, align 4
  %4 = alloca [4 x %class.c], align 16
  store i32 0, ptr %1, align 4
  call void @_ZN1cC2Ev(ptr noundef nonnull align 4 dereferenceable(12) %3)
  %5 = getelementptr inbounds [4 x %class.c], ptr %4, i32 0, i32 0
  %6 = getelementptr inbounds %class.c, ptr %5, i64 4
opt: /usr/local/include/llvm/IR/Instructions.h:1170: llvm::Value* llvm::GetElementPtrInst::getOperand(unsigned int) const: Assertion `i_nocapture < OperandTraits<GetElementPtrInst>::operands(this) && "getOperand() out of range!"' failed.
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump:
0.	Program arguments: opt -load-pass-plugin=./build/FsharingPass/FsharingPass.so -passes=fsharing-pass test.ll -f
 #0 0x0000561228204ee0 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/usr/local/bin/opt+0x2fddee0)
 #1 0x000056122820274e SignalHandler(int) Signals.cpp:0:0
 #2 0x00007fefdfe70520 (/lib/x86_64-linux-gnu/libc.so.6+0x42520)
 #3 0x00007fefdfec49fc __pthread_kill_implementation ./nptl/pthread_kill.c:44:76
 #4 0x00007fefdfec49fc __pthread_kill_internal ./nptl/pthread_kill.c:78:10
 #5 0x00007fefdfec49fc pthread_kill ./nptl/pthread_kill.c:89:10
 #6 0x00007fefdfe70476 gsignal ./signal/../sysdeps/posix/raise.c:27:6
 #7 0x00007fefdfe567f3 abort ./stdlib/abort.c:81:7
 #8 0x00007fefdfe5671b _nl_load_domain ./intl/loadmsgcat.c:1177:9
 #9 0x00007fefdfe67e96 (/lib/x86_64-linux-gnu/libc.so.6+0x39e96)
#10 0x00007fefdfe15bc2 llvm::GetElementPtrInst::getOperand(unsigned int) const (./build/FsharingPass/FsharingPass.so+0x21bc2)
#11 0x00007fefdfe16a1d llvm::ReplaceTypeVisitor::visitGetElementPtrInst(llvm::GetElementPtrInst&) (./build/FsharingPass/FsharingPass.so+0x22a1d)
#12 0x00007fefdfe1bb63 llvm::InstVisitor<llvm::ReplaceTypeVisitor, void>::visitGetElementPtr(llvm::GetElementPtrInst&) (./build/FsharingPass/FsharingPass.so+0x27b63)
#13 0x00007fefdfe1aee5 llvm::InstVisitor<llvm::ReplaceTypeVisitor, void>::visit(llvm::Instruction&) (./build/FsharingPass/FsharingPass.so+0x26ee5)
#14 0x00007fefdfe1a3b6 void llvm::InstVisitor<llvm::ReplaceTypeVisitor, void>::visit<llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>>(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>) (./build/FsharingPass/FsharingPass.so+0x263b6)
#15 0x00007fefdfe19842 llvm::InstVisitor<llvm::ReplaceTypeVisitor, void>::visit(llvm::BasicBlock&) (./build/FsharingPass/FsharingPass.so+0x25842)
#16 0x00007fefdfe18d88 void llvm::InstVisitor<llvm::ReplaceTypeVisitor, void>::visit<llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>>(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>) (./build/FsharingPass/FsharingPass.so+0x24d88)
#17 0x00007fefdfe182b0 llvm::InstVisitor<llvm::ReplaceTypeVisitor, void>::visit(llvm::Function&) (./build/FsharingPass/FsharingPass.so+0x242b0)
#18 0x00007fefdfe1768d llvm::InstVisitor<llvm::ReplaceTypeVisitor, void>::visit(llvm::Function*) (./build/FsharingPass/FsharingPass.so+0x2368d)
#19 0x00007fefdfe1388c replaceUsesInFunction(llvm::Function*, llvm::StructType*, llvm::StructType*) (./build/FsharingPass/FsharingPass.so+0x1f88c)
#20 0x00007fefdfe13977 replace_types(llvm::Module&, llvm::StructType*, llvm::StructType*, std::vector<llvm::GlobalVariable*, std::allocator<llvm::GlobalVariable*>>) (./build/FsharingPass/FsharingPass.so+0x1f977)
#21 0x00007fefdfe13d63 padStruct(llvm::StructType*, llvm::Module&) (./build/FsharingPass/FsharingPass.so+0x1fd63)
#22 0x00007fefdfe13e28 (anonymous namespace)::FsharingPass::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) Pass.cpp:0:0
#23 0x00007fefdfe14681 llvm::detail::PassModel<llvm::Module, (anonymous namespace)::FsharingPass, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>>::run(llvm::Module&, llvm::AnalysisManager<llvm::Module>&) Pass.cpp:0:0
#24 0x00005612258ea769 llvm::runPassPipeline(llvm::StringRef, llvm::Module&, llvm::TargetMachine*, llvm::TargetLibraryInfoImpl*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::ToolOutputFile*, llvm::StringRef, llvm::ArrayRef<llvm::PassPlugin>, llvm::opt_tool::OutputKind, llvm::opt_tool::VerifierKind, bool, bool, bool, bool, bool, bool, bool) (/usr/local/bin/opt+0x6c3769)
#25 0x00005612257fa150 main (/usr/local/bin/opt+0x5d3150)
#26 0x00007fefdfe57d90 __libc_start_call_main ./csu/../sysdeps/nptl/libc_start_call_main.h:58:16
#27 0x00007fefdfe57e40 call_init ./csu/../csu/libc-start.c:128:20
#28 0x00007fefdfe57e40 __libc_start_main ./csu/../csu/libc-start.c:379:5
#29 0x00005612258deaf5 _start (/usr/local/bin/opt+0x6b7af5)
Aborted (core dumped)
llvm-dis: error: file too small to contain bitcode header
warning: overriding the module target triple with x86_64-unknown-linux-gnu [-Woverride-module]
1 warning generated.
/usr/bin/ld: /lib/x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
clang: error: linker command failed with exit code 1 (use -v to see invocation)
